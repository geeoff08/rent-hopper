
suppressMessages(library("jsonlite"))
install.packages("dplyr")
suppressMessages(library("dplyr"))
install.packages("plotly")
suppressMessages(library("plotly"))
suppressMessages(library("purrr"))
install.packages("RecordLinkage")
suppressMessages(library("RecordLinkage"))
library(RecordLinkage)
setwd("~/Documents/Research")
lst.trainData <- fromJSON("train.json")

vec.variables <- setdiff(names(lst.trainData), c("photos", "features"))

df.train <-map_at(lst.trainData, vec.variables, unlist) %>% tibble::as_tibble(.)

vec.addressSimilarity <- levenshteinSim(tolower(df.train$street_address),tolower(df.train$display_address))


df.train$similaritySamples <- vec.addressSimilarity
head(df.train$similaritySamples)
install.packages("foreign")
require(foreign)
require(ggplot2)
require(MASS)
install.packages("Hmisc")
require(Hmisc)
require(reshape2)
colnames(df.train)
df.train$interest_level2[df.train$interest_level == "high"]<- 2
df.train$interest_level2[df.train$interest_level == "medium"]<- 1
df.train$interest_level2[df.train$interest_level == "low"]<- 0
install.packages("MASS")
library("MASS")

df.train$similaritySamples[is.na(df.train$similaritySamples) == TRUE]<-.7857
model<-polr(interest_level3 ~  bathrooms + bedrooms + latitude + longitude +   similaritySamples, 
            data =df.train, Hess = TRUE )
summary(model)
summary(df.train$similaritySamples)
df.train$interest_level3 <- as.factor(df.train$interest_level)
colnames(df.train)
table(df.train$interest_level2)
help(polr)
head(df.similaritySamples,20)
df.train2 <- as.data.frame(df.train)
write.csv(df.train2, file = "hoppertrainreal.csv")
